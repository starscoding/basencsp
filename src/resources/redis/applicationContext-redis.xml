<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<beans>
		<bean id="redisConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:/redis/redis.properties" />
			<property name="ignoreUnresolvablePlaceholders" value="true" />
		</bean>
		<bean id="connectionFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
			p:host-name="127.0.0.1" p:port="6379" p:password="myredis"
			p:use-pool="true" p:database="${redis.dbIndex}" p:timeout="30000" p:pool-config-ref="jedisPoolConfig" />
<!-- 		<bean id="connectionFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
			p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
			p:use-pool="true" p:database="${redis.dbIndex}" p:timeout="30000" p:pool-config-ref="jedisPoolConfig" /> -->

		<context:annotation-config />

		<context:component-scan base-package="com.eastcom_sw" />

		<bean id="redisTemplate"
			class="org.springframework.data.redis.core.StringRedisTemplate"
			p:connection-factory-ref="connectionFactory" />

		<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
			<!-- 最大分配的对象数 -->
			<property name="maxActive" value="${redis.maxActive}" />
			<!-- 最大能够保持idel状态的对象数 -->
			<property name="maxIdle" value="${redis.maxIdle}" />
			<!-- 当池内没有返回对象时，最大等待时间 -->
			<property name="maxWait" value="${redis.maxWait}" />
			<!-- 当调用broow Object方法时，是否进行有效性检查 -->
			<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		</bean>
	</beans>
</beans>
